{"version":3,"sources":["utilits/Products.js","utilits/CartContext.js","components/ProductItem.js","pages/Catalogue.js","pages/Basket.js","components/Header.js","App.js","index.js"],"names":["ProductList","name","price","id","CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","children","ProductItem","useContext","Grid","item","xs","sm","lg","md","xl","Card","className","CardMedia","component","height","alt","image","CardContent","Typography","variant","gutterBottom","Button","color","onClick","product","count","currentState","find","Catalogue","Container","container","direction","justify","alignItems","spacing","map","x","Basket","totalPrice","reduce","acc","curr","front","document","querySelector","bankLogo","brandLogo","frontFields","querySelectorAll","number","setNumber","useEffect","fetch","replace","trim","slice","mode","then","response","json","data","style","background","formBackgroundColor","formTextColor","borderColor","formBorderColor","forEach","field","display","formBankLogoBigSvg","src","formBrandLogoSvg","brandLogoOriginalSvg","catch","error","console","type","placeholder","onChange","e","target","maxLength","autoFocus","TableContainer","Paper","Table","TableBody","TableRow","TableCell","align","backgroundColor","filter","size","length","colSpan","Header","marginBottom","paddingTop","to","textDecoration","marginRight","fontSize","App","exact","path","Context","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a27a6f14.chunk.js","sourcesContent":["const ProductList = [\r\n    {name: 'Товар 1',\r\nprice: 1000,\r\nid: 1},\r\n{name: 'Товар 2',\r\nprice: 2000,\r\nid: 2},\r\n{name: 'Товар 3',\r\nprice: 3000,\r\nid: 3},\r\n{name: 'Товар 4',\r\nprice: 4000,\r\nid: 4},\r\n{name: 'Товар 5',\r\nprice: 5000,\r\nid: 5},\r\n{name: 'Товар 6',\r\nprice: 6000,\r\nid: 6},\r\n{name: 'Товар 7',\r\nprice: 7000,\r\nid: 7},\r\n{name: 'Товар 8',\r\nprice: 8000,\r\nid: 8},\r\n{name: 'Товар 9',\r\nprice: 9000,\r\nid: 9},\r\n]\r\n\r\nexport default ProductList","import React, {useState} from 'react'\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { CartContext } from \"../utilits/CartContext\";\r\n\r\nconst ProductItem = ({ name, price, id }) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const addToCart = () => {\r\n    const product = { name, price, count: 1 };\r\n    setCart((currentState) => {\r\n      if (currentState.find((item) => item.name === name)) {\r\n        currentState.find((item) => item.name === name).count += 1;\r\n        return [...currentState];\r\n      } else {\r\n        return [...currentState, product];\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  //Использованы плэйсхолдеры вместо картинок товара\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={4} md={4} xl={3}>  \r\n      <Card className=\"ProductItem\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"5%\"\r\n          alt=\"product image\"\r\n          image={\"http://picsum.photos/700/300?random=\" + id}\r\n        ></CardMedia>\r\n        <CardContent>\r\n          <Typography variant=\"h2\">{name}</Typography>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            {price} рублей\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={addToCart}>\r\n            ADD TO CART\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ProductItem;\r\n","import React from \"react\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport ProductList from \"../utilits/Products\";\r\nimport ProductItem from \"../components/ProductItem\";\r\n\r\n\r\nconst Catalogue = () => {\r\n \r\n\r\n  return (\r\n    <Container>\r\n      <Grid\r\n        container\r\n        \r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={4}\r\n      >\r\n        {ProductList.map((x, id) => {\r\n          return <ProductItem name={x.name} id={x.id} price={x.price} key={x.id}/>;\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Container, Grid, Button } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport { CartContext } from \"../utilits/CartContext\";\r\n\r\n//Получилась большая страница, можно было бы разделить на компоненты: card + cartList\r\n\r\nconst Basket = () => {\r\n  //provider part\r\n\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const totalPrice = cart.reduce(\r\n    (acc, curr) => acc + curr.price * curr.count,\r\n    0\r\n  );\r\n\r\n  //card info part\r\n\r\n  const front = document.querySelector(\".front\");\r\n  const bankLogo = document.querySelector(\".bank-logo\");\r\n  const brandLogo = document.querySelector(\".brand-logo\");\r\n  const frontFields = document.querySelectorAll(\".front .field\");\r\n  const [number, setNumber] = useState('');\r\n\r\n  const numberFieldChangeHandler = () => {\r\n    number !== '' &&\r\n      fetch(\r\n        `https://api.cardinfo.online?input=${number\r\n          .replace(/\\s+/g, \"\")\r\n          .trim()\r\n          .slice(0, 6)}&apiKey=791258f60b79de566e04100aefd58671`,\r\n        {\r\n          mode: \"cors\",\r\n        }\r\n      )\r\n        .then(function (response) {\r\n          return response.json();\r\n        })\r\n        .then(function (data) {\r\n          front.style.background = data.formBackgroundColor;\r\n          front.style.color = data.formTextColor;\r\n          front.style.borderColor = data.formBorderColor;\r\n          frontFields.forEach(\r\n            (field) => (field.style.borderColor = data.formBorderColor)\r\n          );\r\n          bankLogo.style.display = data.formBankLogoBigSvg ? \"block\" : \"none\";\r\n          bankLogo.src = data.formBankLogoBigSvg;\r\n          brandLogo.style.display =\r\n            data.formBrandLogoSvg || data.brandLogoOriginalSvg\r\n              ? \"block\"\r\n              : \"none\";\r\n          brandLogo.src = data.formBrandLogoSvg || data.brandLogoOriginalSvg;\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n  };\r\n\r\n  useEffect(numberFieldChangeHandler, [number]);\r\n\r\n  //functions + and -\r\n\r\n  const Increase = (name) => {\r\n    setCart((currentState) => {\r\n      currentState.find((item) => item.name === name).count += 1;\r\n      return [...currentState];\r\n    });\r\n  };\r\n\r\n  const Decrease = (name) => {\r\n    setCart((currentState) => {\r\n      currentState.find((item) => item.name === name).count -= 1;\r\n      if (currentState.find((item) => item.name === name).count < 1) {\r\n        return [...currentState.filter((item) => item.name !== name)];\r\n      }\r\n      return [...currentState];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n        <div className=\"cards\">\r\n          <div className=\"front card\">\r\n            <img className=\"bank-logo\" alt='bank-logo'/>\r\n            <img className=\"brand-logo\" alt='brand-logo'/>\r\n            <div className=\"fields\">\r\n              <input\r\n                className=\"field number\"\r\n                type=\"text\"\r\n                placeholder=\"0000 0000 0000 0000\"\r\n                onChange={(e) => {\r\n                  setNumber(e.target.value);\r\n                }}\r\n                maxLength=\"19\"\r\n                autoFocus\r\n                value={\r\n                  number &&\r\n                  number\r\n                    .replace(/\\D/g, \"\")\r\n                    .replace(\r\n                      /^(\\d{0,4})(\\d{0,4})(\\d{0,4})(\\d{0,4})$/g,\r\n                      \"$1 $2 $3 $4\"\r\n                    )\r\n                }\r\n              />\r\n\r\n              <label className=\"label\">Expires</label>\r\n              <input className=\"field expired\" type=\"text\" maxLength=\"2\" placeholder=\"MM\" />\r\n              <input className=\"field expired\" type=\"text\" maxLength=\"2\" placeholder=\"YY\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"back card\">\r\n            <input className=\"field code\" type=\"password\" maxLength=\"3\" />\r\n            <label className=\"label\">CVV</label>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Container className=\"productList\">\r\n        <TableContainer component={Paper}>\r\n          <Table >\r\n            <TableBody>\r\n              {cart.map((x,id) => {\r\n                return (\r\n                  <TableRow key={id}>\r\n                    <TableCell>{x.name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#b9ddfd\",\r\n                          color: \"whitesmoke\",\r\n                        }}\r\n                        onClick={() => Decrease(x.name)}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{x.count}</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"rgb(47, 100, 179)\",\r\n                          color: \"whitesmoke\",\r\n                        }}\r\n                        onClick={() => Increase(x.name)}\r\n                      >\r\n                        <AddIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{x.price}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {cart.length > 0 ? (\r\n                <TableRow>\r\n                  <TableCell align=\"left\">Всего на {totalPrice} руб.</TableCell>\r\n                  <TableCell align=\"right\" colSpan=\"6\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => setCart([])}\r\n                    >\r\n                      Buy\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\nexport default Basket;\r\n","import React from 'react'\r\nimport { Container } from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n\r\nreturn (\r\n    \r\n    <Container align='right' style={{marginBottom: '5%', paddingTop: '5%'}} > \r\n    <Link to=\"/triton-html\" style={{textDecoration: 'none', marginRight: '2rem'}}>\r\n    <ListIcon fontSize='large'/>\r\n</Link>\r\n\r\n<Link to=\"/triton-html/basket\" style={{textDecoration: 'none'}}>\r\n    <ShoppingCartIcon fontSize='large' />\r\n    </Link>\r\n    \r\n    </Container>\r\n)\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n","import './App.css';\nimport Catalogue from './pages/Catalogue';\nimport Basket from './pages/Basket';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <Switch>\n    <Route exact path='/triton-html' component={Catalogue}></Route>\n    <Route exact path='/triton-html/basket' component={Basket}></Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CartProvider } from './utilits/CartContext';\n\nexport const Context = createContext(null)\n\n\nReactDOM.render(\n  \n  <BrowserRouter >\n  <CartProvider>\n    <App />\n    </CartProvider>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}